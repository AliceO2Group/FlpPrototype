*** Install everything in correct order ***
make configure
sudo make install

*** Global build ***
To configure and build everything : make 
To configure everything : make configure
To build everything : make build
To install everything : make install
To clean everything : make clean
To delete build folders (deeper clean) : make clobber
"Make" will always configure so you might want to use "make build" most of the time. 

*** Subproject build ***
cd projectTemplate
mkdir -p build
cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Debug .. 
make -j4
make install

NOTES
- By default it installs in /usr/local. You can change this in cmake/O2.cmake.
  If you change it, make sure to set your LD_LIBRARY_PATH and PATH accordingly.
- To uninstall do :  xargs rm < install_manifest.txt

I had to change Configuration quite a lot to make it work properly with templates for any type.

TODO
- test on linux
- Finish converting the projects that do not adhere completely to the new scheme
    * DataFormat
- test compilation from top dir
- Check that binaries can run on Mac once installed.
- The dynamic lib of Configuration doesn't work when linking. I think that it is because you can't template only
  on the return type.
- Move common stuff to O2.cmake (do the same for the project template)
- Change the project template for the new one
- Test Monitoring build
- Reformat Control, Configuration, etc...
- Control does not install anything ?
- In general: naming convention (e.g. no abbreviation), coding convention (1 class per file, ...), cmake best practices
  (find_packages, decentralization), formatting, namespaces
- test doc
- Can we avoid having the same Version.h.in everywhere ? can we generalize it ?
- Extract everything that is common in O2.cmake.
- Finish the uninstall target